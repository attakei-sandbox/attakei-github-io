<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>attakei page</title><link href="http://attakei.net/" rel="alternate"></link><link href="http://attakei.net/feeds/tech.atom.xml" rel="self"></link><id>http://attakei.net/</id><updated>2016-01-02T00:00:00+09:00</updated><entry><title>大晦日ハッカソン2015 &amp; 正月ハッカソン2016 結果メモ</title><link href="http://attakei.net/2016/01/02/da-hui-ri-hatsukason2015-zheng-yue-hatsukason2016-jie-guo-memo.html" rel="alternate"></link><updated>2016-01-02T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2016-01-02:2016/01/02/da-hui-ri-hatsukason2015-zheng-yue-hatsukason2016-jie-guo-memo.html</id><summary type="html">&lt;p&gt;とりあえず、表立って表明したテーマ2個は延長戦の正月ハッカソンまでに完了できたので、前回よりだいぶ進歩したと思う。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;結果&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;このブログをTinkererからPelicanへ移行する&lt;ul&gt;
&lt;li&gt;移行しました（ただし、現時点で2014年代以前の記事や、固定ページ系の移行が未完了）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;deck2pdfのバージョンアップ&lt;ul&gt;
&lt;li&gt;簡単に書くと、「リストを順番に表示するアニメーションを使用していた場合に、アニメーション単位でページを作成できるように」&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;div class="section" id="tinkerer-pelican"&gt;
&lt;h3&gt;Tinkerer-&amp;gt;Pelican&lt;/h3&gt;
&lt;p&gt;どちらもPython&amp;amp;reSTベースのブログツールなので、記事移行にかかるコストの見積もりはだいぶ簡単だった。
ネックとなったのは、&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;雑な設定だとpermalinkの維持が難しい&lt;/li&gt;
&lt;li&gt;カテゴリやタグ設定の差異を移行時に編集しないといけない&lt;/li&gt;
&lt;li&gt;Tinkerのレイアウトはそのまま使えず、サードパーティのテーマを探すのが面倒&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特に最後の箇所がいろいろ面倒。一応pelicanthemes.com見ながら現在の形を選んだが、割とあっさり変わるかも。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="deck2pdf"&gt;
&lt;h3&gt;deck2pdf&lt;/h3&gt;
&lt;p&gt;片手間にやろうと思えば大晦日ハッカソン前にできた気もするので、もうちょっと計画的に開発しないとダメですね。&lt;/p&gt;
&lt;p&gt;開発自体はMacbookで進めていたのですが、たまにネットワーク通信がおかしくなって、
テスト用に外部ページを変換しようとするたびにタイムアウトになったりしてたのが一番しんどかった。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="ブログ"></category><category term="Pelican"></category><category term="deck2pdf"></category><category term="Python"></category></entry><entry><title>2015年Tech系振り返り</title><link href="http://attakei.net/2015/12/31/review_tech_2015.html" rel="alternate"></link><updated>2015-12-31T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-12-31:2015/12/31/review_tech_2015.html</id><summary type="html">&lt;div class="section" id="github"&gt;
&lt;h2&gt;github振り返り&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/attakei/omniauth-backlog"&gt;https://github.com/attakei/omniauth-backlog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/attakei/QuizDisplay"&gt;https://github.com/attakei/QuizDisplay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/attakei/ansible-packed-role-plugin"&gt;https://github.com/attakei/ansible-packed-role-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/attakei/deck2pdf-python"&gt;https://github.com/attakei/deck2pdf-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[WIP] &lt;a class="reference external" href="https://github.com/attakei/ananta"&gt;https://github.com/attakei/ananta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;deck2pdf-pythonがそこそこ。omniauth-backlogが地味にダウンロードされている感じ。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;参加イベント系振り返り&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Developers Summit 2015 winter&lt;/li&gt;
&lt;li&gt;Akamai conference&lt;/li&gt;
&lt;li&gt;Developers Summit 2015 summer&lt;/li&gt;
&lt;li&gt;YAPC:Asia Tokyo 2015&lt;/li&gt;
&lt;li&gt;Ansible Meet up&lt;/li&gt;
&lt;li&gt;Ansible勉強会&lt;/li&gt;
&lt;li&gt;PHP conference 2015&lt;/li&gt;
&lt;li&gt;PyCon JP 2015&lt;/li&gt;
&lt;li&gt;BPStudy&lt;/li&gt;
&lt;li&gt;Akamai Customer Day&lt;/li&gt;
&lt;li&gt;CodeIQ忘年会&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こんなに行ってたのか。 &lt;a class="reference external" href="http://attakei.net/2015/12/30/review_live_2015.html"&gt;ライブ振り返り&lt;/a&gt; も考えると、結構な外出してたんだなぁ。&lt;/p&gt;
&lt;/div&gt;
</summary><category term="振り返り"></category></entry><entry><title>オールスター集結！ CodeIQ大忘年会</title><link href="http://attakei.net/2015/12/23/codeiq39.html" rel="alternate"></link><updated>2015-12-23T23:50:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-12-23:2015/12/23/codeiq39.html</id><summary type="html">&lt;p&gt;滑り込みで行ってきた。「ブログ記事を書くまでが(ry)」&lt;/p&gt;
&lt;p&gt;基本細々とした感想を書くのが苦手なので、イベント内でちょこちょこ挙がってたキーワードを主軸に書いてみる。&lt;/p&gt;
&lt;div class="section" id="tensorflow"&gt;
&lt;h2&gt;TensorFlow などなど&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="_https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://cloud.google.com/vision/"&gt;Google Cloud Vision API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;セッション聞いていると、やっぱり機械学習系がすごい勢いで来ている。
Cloud Vision APIあたりは利用開始の敷居が低くなれば、一気に色々な使い方が生まれていきそう。
来年もまだ明るいキーワードになりそう。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;リモートワークとか&lt;/h2&gt;
&lt;p&gt;基本的には「それで業務が周りさえすれば、どちらか片方に強制する理由はない」という玉虫色なスタンス。
セキュリティ事由などで外部からは良くないケースもあるし、家庭の事情で出社がしづらいケースもあったりするので、まずは選択肢を増やせる環境を作っていくことが重要かな。。。と&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="coffeescript"&gt;
&lt;h2&gt;CoffeeScript終了のお知らせ&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/shinout"&gt;&amp;#64;shinout&lt;/a&gt; さんのLT。Coffee愛がすごい&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.slideshare.net/shinout/coffeescript-56416623"&gt;http://www.slideshare.net/shinout/coffeescript-56416623&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;少し前に作ってたnode.jsベースのページのgulpにもっぱらcoffeeを使ったのだが、気づけばES6+Babelになってた。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;blockquote class="twitter-tweet" lang="ja"&gt;&lt;p lang="ja" dir="ltr"&gt;CodeIQ忘年会の帰り中。自分視点だとスクリーンやストリームの奥でしか見ることができない人の話を聞いたり顔を見られたりする機会はやっぱり大切 &lt;a href="https://twitter.com/hashtag/codeiq39?src=hash"&gt;#codeiq39&lt;/a&gt;&lt;/p&gt;&amp;mdash; attakei (@attakei) &lt;a href="https://twitter.com/attakei/status/679605875233828865"&gt;2015, 12月 23&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/div&gt;
</summary><category term="Techイベント"></category><category term="CodeIQ"></category></entry><entry><title>deck2pdf: HTMLスライドをSlideShareなどにアップロードしたい自分のためのコンバーター</title><link href="http://attakei.net/2015/11/09/deck2pdf-htmlsuraidowoslidesharenadoniatsupurodoshitaizi-fen-notamenokonbata.html" rel="alternate"></link><updated>2015-11-09T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-11-09:2015/11/09/deck2pdf-htmlsuraidowoslidesharenadoniatsupurodoshitaizi-fen-notamenokonbata.html</id><summary type="html">&lt;p&gt;初回の開発開始から1ヶ月ぐらいかけてひっそりと作っていたのですが、このたび最低限の普段使いはできるレベルまでは進んだつもりなので、ブログの記事にしました。&lt;/p&gt;
&lt;p&gt;PyPI に &lt;a class="reference external" href="https://pypi.python.org/pypi/deck2pdf/"&gt;deck2pdf&lt;/a&gt; というパッケージをリリースしました。現時点でのバージョンは0.2.0です。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;何をするものか&lt;/h2&gt;
&lt;p&gt;端的に言えば、 &lt;strong&gt;Google HTML5 slides&lt;/strong&gt; や &lt;strong&gt;Google I/O 2012 slides&lt;/strong&gt; などのHTMLフォーマットのスライドを、可能な限りレイアウトを崩さずに1コマンドでPDF変換するものです。&lt;/p&gt;
&lt;p&gt;現状ではPySide経由でQtを使う以外は、ほぼすべてPythonで実装されています。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;どうして作ったのか&lt;/h2&gt;
&lt;p&gt;自分が簡単なスライドを用意するときは、  &lt;a class="reference external" href="http://sphinx-doc.org"&gt;Sphinx&lt;/a&gt; 拡張の &lt;a class="reference external" href="https://github.com/nyergler/hieroglyph/blob/master/docs/index.rst"&gt;Hieroglyph&lt;/a&gt; から生成したスライドを用いています。
ですが、HTMLスライドはSlideShareやSpeakerDeckにはアップロードできません。（SlideShareはpptxやpdf, SpeakerDeckはpdfのみ）&lt;/p&gt;
&lt;p&gt;となると、どうにかPDF形式のものを用意する必要があるのですが、先人の知恵を見て回った感じだと概ね次のパターンに分かれていました。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ブラウザでPDF保存する（print用cssを用意するケースあり）&lt;/li&gt;
&lt;li&gt;PhantomJSなどで各ページのキャプチャを取得して、convert等でつなげる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの方法を整理するのも問題ないのはわかっていたのですが、 半ば &lt;strong&gt;「せっかくだから」&lt;/strong&gt; という理由で&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pythonでページをキャプチャして&lt;/li&gt;
&lt;li&gt;PythonでPDFを生成する&lt;/li&gt;
&lt;li&gt;というのをまとめて動かす&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というのに挑戦してみました。&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;現状どこまで出来るか&lt;/h3&gt;
&lt;p&gt;今回アップロードしたver 0.2.0の時点で、以下のことまではできるようになっています。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Google HTML5 slides もしくは Google I/O 2012 slides のスライドをPNGでキャプチャして&lt;/li&gt;
&lt;li&gt;そのままレイアウトをほぼ崩さずにPDF化する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このままだと、テキスト部分をSlideShareが読み取れないのでなんとかできないかを検討している段階です。
それでも、この時点でもPDFとして見苦しくない形式では変換できているので、社内向け社外向け問わず機会を見つけてはスライドを作っていけたらなぁと思っています。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Python"></category><category term="pdf"></category></entry><entry><title>Thank you PyCon JP</title><link href="http://attakei.net/2015/10/12/thank_you_pycon_jp.html" rel="alternate"></link><updated>2015-10-12T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-10-12:2015/10/12/thank_you_pycon_jp.html</id><summary type="html">&lt;p&gt;ブログとかに感想エントリーとかを書くまでがカンファレンスって誰かが言ってた。&lt;/p&gt;
&lt;p&gt;10/10,11に PyCon JP 2015 に行ってきました。去年はランティス祭りと完全に被ってたので、日程が発表と同時に不参加だったので、今年が初参加。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;セッションもろもろ&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;1日目&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python と型ヒント (Type Hints)&lt;ul&gt;
&lt;li&gt;型ヒント自体は興味深いのは間違いない。IDEがうまく使ってくれるだけでも、間違いなく有用であるとは思う。&lt;/li&gt;
&lt;li&gt;中途半端に実装系に使われてしまって、CPythonとPyPyで挙動がガラッと変わるとかがなければいいかな。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;なぜWeb画面自動テストはうまく行かないのか&lt;ul&gt;
&lt;li&gt;Seleniumがコストを伴うのは仕方がないとしても、品質を担保するためにはある程度許容はすべきかと。&lt;/li&gt;
&lt;li&gt;この辺は企業でのバランス感に依存したりするかな。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tornado/ElasticSearchで実現する大量ツイートのリアルタイム関連文書判定&lt;ul&gt;
&lt;li&gt;ElasticSearchの話題がほとんどで、Tornadoの話が殆ど出てなかった記憶が&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sphinxで作る貢献しやすいドキュメント翻訳の仕組み&lt;ul&gt;
&lt;li&gt;i18nって普段使わないので、使い方とか知るいい機会になった。&lt;/li&gt;
&lt;li&gt;日本語のドキュメントがあると敷居が下がるのは理解できる。なるべく自分は英語ドキュメントを積極的に読もうするのは、別の話になるだろうし。&lt;/li&gt;
&lt;li&gt;普段使っているパッケージのドキュメントがほとんど英語しかないので、機会があったら翻訳してみるのも悪くないかも。と思える、いいセッションでした。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;2日目&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Keynote&lt;ul&gt;
&lt;li&gt;組織論など。OSSコミュニティ的な組織は確かにうまく回せれば気持ちいので、組織内の人対人は役割ベースで動けるほうがいいとは思う。&lt;/li&gt;
&lt;li&gt;企業しての案件進行などを考えていくと難しい面もあると思うので、この辺は上の層が考えればいいのか？というかその方が楽（多分これがダメなんだと思う）&lt;/li&gt;
&lt;li&gt;ビープラウドの名刺面白いなぁ（役職欄がほぼ自由でウォーロックがあるとかw）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;uWSGI/Dockerを利用したWebサービス運用事例&lt;ul&gt;
&lt;li&gt;gunicorn以外のWSGIとしてuWSGIの性能指標とノンストップサービスのためのサービスコントロールについて。&lt;/li&gt;
&lt;li&gt;(自分はPyramidを普段使いしている&amp;amp;大規模ではない、のでもっぱらwaitressを使ってます)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;野球Hack!~Pythonを用いたデータ分析と可視化&lt;ul&gt;
&lt;li&gt;去年のタイムラインを眺めてた際に、個人的に異彩を放っていたもの。事前判定でのメインセッション。&lt;/li&gt;
&lt;li&gt;そして「趣味」+「エンジニアリング」の究極系の片鱗をみた気がする。&lt;/li&gt;
&lt;li&gt;アダム・ダン率計算に続き、ジョーイ・ボットの散歩回数まで出てくる。&lt;/li&gt;
&lt;li&gt;(ちょっと、これをきっかけにクイズHackとかやってみたくなるじゃないか)&lt;/li&gt;
&lt;li&gt;スライドを振り返ると、Pythonパッケージでできる属性は結構多い…&lt;/li&gt;
&lt;li&gt;PyPIデビュー 2015&lt;/li&gt;
&lt;li&gt;当日プログラムを見た時に真っ先に見に行くことが確定していたやつ。&lt;/li&gt;
&lt;li&gt;自分用に作ってたTinkerer用Twitterまとめエントリー作成用パッケージをPyPIには登録してみていたものの、きちんとした流れを追いたくて出席&lt;/li&gt;
&lt;li&gt;スライドを教えてもらった瞬間で期待値を遥かに上回る収穫が&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;ランチやらパーティーやら&lt;/h2&gt;
&lt;p&gt;普段懇親会やパーティーの類はほとんど出なかったのだけど、チケット代に入ってたりもしているのもあり参加してみることにした。&lt;/p&gt;
&lt;p&gt;自分を含めて自称コミュ障が多い。が、そんなもんだとは思う。（パーティー時に会話したメンツの中では多分自分が一番コミュ障）&lt;/p&gt;
&lt;p&gt;Pythonを主力にしている企業の人だけでなく、Pythonを仕事外で使っている人もいていろいろと楽しい会話ができたかなと。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Thank you PyCon JP!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;また来年も行きたいし、セッションやらLTやらできたりできるようになっていたいな、と思える2日でした。&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Techイベント"></category><category term="Python"></category></entry><entry><title>ホスティング場所を移動した際のメモ</title><link href="http://attakei.net/2015/09/05/hosuteinguchang-suo-woyi-dong-shitaji-nomemo.html" rel="alternate"></link><updated>2015-09-05T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-09-05:2015/09/05/hosuteinguchang-suo-woyi-dong-shitaji-nomemo.html</id><summary type="html">&lt;p&gt;借りてるVPSやドメイン管理場所などの整理の一環として、スタードメイン利用時の付属サーバーからgithub-pagesに移行させてみた際のメモ。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;おおまかに流れ&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;将来的にきちんとお金をかけるかはおいておいて、ひとまず無料で完結する枠で再構築&lt;/li&gt;
&lt;li&gt;下書きとかを割りと手軽に放り込みたいため、プライベートリポジトリでrstソースを管理するのは変わらず&lt;ul&gt;
&lt;li&gt;個人環境にgitリポジトリを持つのを一旦辞める予定なので、bitbucketに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;bitbucketにもページ公開機能はあるが、ドメインは維持しておきたい。そしてbitbucketはCNAMEが使えないっぽい&lt;ul&gt;
&lt;li&gt;aerobaticもあるがちょっと使い勝手が微妙な印象を受けたので、一旦使わない&lt;/li&gt;
&lt;li&gt;しょうがないので(?)、ビルドしたHTMLはgithubに配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tinkererのビルドも、個人環境のjenkinsからwerckerに移行&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- werckerとの戦い:使いたいユーザーstepが動かない
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

werckerを選んだのはbitbucketのプライベートリポジトリをビルドできてかつ無料である程度知名度がありそうなのがここだったから。
1回のビルドにおける25分以内の制約もここではあまり関係なさそうだし。 --&gt;
&lt;/div&gt;
</summary><category term="github"></category><category term="bitbucket"></category></entry><entry><title>YAPC::Asia Tokyo 2015</title><link href="http://attakei.net/2015/08/22/yapcasia_tokyo_2015.html" rel="alternate"></link><updated>2015-08-22T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-08-22:2015/08/22/yapcasia_tokyo_2015.html</id><summary type="html">&lt;p&gt;刺激を貰いたくて、前夜祭込で3日とも参加してきた。&lt;/p&gt;
&lt;p&gt;印象に残ったり、現時点で自分に大きな影響があった部分だけ振り返ってみる。&lt;/p&gt;
&lt;p&gt;（以下、話題が思い切り散発的になります）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;uzullaさんのPHPのセッションはちゃんと最初から聞きたかった。（途中参加）&lt;/li&gt;
&lt;li&gt;tagomorisさんのセッションに触発されて、少しだけomniauth-backlogをいじってみた。&lt;ul&gt;
&lt;li&gt;スタート段階に近いOSSはやっぱりある程度アクティブ「に見える」感じであることが望ましくはあるのだろうと思いながら、自分の書いたコードを修正するきっかけになっていく感じが、一番刺激になる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;自分は基本的にカンファレンス系に見る側の参加までしかできていないのだけれど、LTする人はやっぱり構成能力と勢いがすごい。&lt;ul&gt;
&lt;li&gt;個人的に一番おもしろかったのは、平田さんの「botになる話」。&lt;/li&gt;
&lt;li&gt;ランチセッションの際にもすこし話は聞いていてたのだが「botになる」という単語が面白すぎる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ランチセッションでの社内システムの話はなかなか興味深い。&lt;ul&gt;
&lt;li&gt;「痒いところにしか手が届かない」システムはなんだかんだであると業務がスムーズに進むものだし、研修みたいな位置づけで作るようになれば技術的な知見もたまっていいことなんだろう。&lt;/li&gt;
&lt;li&gt;自分の会社では、現状そういったものを作っても公開するための場所を用意しづらいのが障壁になっている感じがするので、やっぱりどうにかしてみたいなとは感じる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上、最近「定期的に外部刺激をもらわないと停滞しがち病」にかかっているエンジニアの感想でした。&lt;/p&gt;
</summary><category term="Techイベント"></category><category term="Perl"></category></entry><entry><title>ブラウザでn◯m✕, +n/-m の成績表示を作ってみてた</title><link href="http://attakei.net/2015/08/11/burauzadenom-n-m-nocheng-ji-biao-shi-wozuo-tsutemiteta.html" rel="alternate"></link><updated>2015-08-11T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-08-11:2015/08/11/burauzadenom-n-m-nocheng-ji-biao-shi-wozuo-tsutemiteta.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://attakei.net/2015/07/30/burauzade7o3xnocheng-ji-biao-shi-wozuo-tsutemiteta.html"&gt;これ&lt;/a&gt; の続き。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://attakei.github.io/QuizDisplay"&gt;実際に動いているところ&lt;/a&gt; と &lt;a class="reference external" href="https://github.com/attakei/QuizDisplay"&gt;ソース&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React+Ardaである程度整理ができた気がする。&lt;/p&gt;
&lt;p&gt;前回から&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;順位表記できるようにして&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;が残ったのだが、&lt;strong&gt;a, b, c, display!&lt;/strong&gt; というネタを思いついでどう進めようか検証中。&lt;/p&gt;
</summary><category term="クイズ"></category><category term="nodejs"></category></entry><entry><title>ブラウザで7◯3×の成績表示を作ってみてた</title><link href="http://attakei.net/2015/07/30/burauzade7o3xnocheng-ji-biao-shi-wozuo-tsutemiteta.html" rel="alternate"></link><updated>2015-07-30T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-07-30:2015/07/30/burauzade7o3xnocheng-ji-biao-shi-wozuo-tsutemiteta.html</id><summary type="html">&lt;p&gt;フロントエンドの勉強と、MasterQEE 2015のリストにAngularJSでの早押し表示を見て、思わず手を出してみた。&lt;/p&gt;
&lt;p&gt;今の形になるのに、だいたい2週間弱ぐらい。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://attakei.github.io/QuizDisplay"&gt;実際に動いているところ&lt;/a&gt; と &lt;a class="reference external" href="https://github.com/attakei/QuizDisplay"&gt;ソース&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React使っているのだけれど、若干コードが迷走しているのでこれから整理。&lt;/p&gt;
&lt;p&gt;整理が終わったら、&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;n○n✕ にできるようにして&lt;/li&gt;
&lt;li&gt;順位表記できるようにして&lt;/li&gt;
&lt;li&gt;誤答ペナルティ選択できるようにして&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;あたりをやれば第一段階クリアかな？&lt;/p&gt;
</summary><category term="クイズ"></category><category term="nodejs"></category></entry><entry><title>Developer Summit 2015 Summer</title><link href="http://attakei.net/2015/07/29/developer_summit_2015_summer.html" rel="alternate"></link><updated>2015-07-29T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-07-29:2015/07/29/developer_summit_2015_summer.html</id><summary type="html">&lt;p&gt;今回のデブサミはテーマが「SPEED for Enterprise」と完全にエンプラ寄りの話が主体なのは承知のうえで、DevOps周りの話につられて全日参加してきた。&lt;/p&gt;
&lt;p&gt;あれなんだよ。やっぱうちの会社ってテストが存在しないんだよ&lt;/p&gt;
</summary><category term="Techイベント"></category></entry><entry><title>July Tech Festa 2015行ってきた</title><link href="http://attakei.net/2015/07/26/july_tech_festa_2015.html" rel="alternate"></link><updated>2015-07-26T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-07-26:2015/07/26/july_tech_festa_2015.html</id><summary type="html">&lt;p&gt;インフラ系エンジニアのカンファレンス。rebuild.fmで存在聞いてその場で参加決めて行ってきた。&lt;/p&gt;
&lt;p&gt;ここ最近Docker周りの情報をピックアップしにいくタイミングを取れなかったので、新しめの情報を得るいい機会にはなったと思う。&lt;/p&gt;
&lt;p&gt;そろそろ時間を作ってswarm,
composeやkubernatesあたりの調査しないとダメなんだと思う。&lt;/p&gt;
</summary><category term="Techイベント"></category></entry><entry><title>今のMBAからの更新を考える</title><link href="http://attakei.net/2015/03/11/jin-nombakaranogeng-xin-wokao-eru.html" rel="alternate"></link><updated>2015-03-11T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2015-03-11:2015/03/11/jin-nombakaranogeng-xin-wokao-eru.html</id><summary type="html">&lt;p&gt;今まで「次のMBA系の発表で現行MBAから新規を買おう」と考えてはいたものの、
MacBookがMBAと分離気味に出たのに加え、MBA,MBPがスペックチェンジしたので、きちんと考えてみようとしてみる。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;今やってること振り返り&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Virtualbox 最大2台&lt;/li&gt;
&lt;li&gt;IntelliJ IDEA&lt;/li&gt;
&lt;li&gt;Airmail&lt;/li&gt;
&lt;li&gt;細々したもの&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;おおまかにまとめてみる&lt;/h2&gt;
&lt;p&gt;NewMacBook上位モデルを比較対象にする。&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;caption&gt;&amp;quot;比較してみた&amp;quot;&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="17%" /&gt;
&lt;col width="17%" /&gt;
&lt;col width="17%" /&gt;
&lt;col width="17%" /&gt;
&lt;col width="17%" /&gt;
&lt;col width="17%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;項目&lt;/td&gt;
&lt;td&gt;現行&lt;/td&gt;
&lt;td&gt;NewMB&lt;/td&gt;
&lt;td&gt;NewMB(下)&lt;/td&gt;
&lt;td&gt;MBA11&lt;/td&gt;
&lt;td&gt;MBA13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;価格&lt;/td&gt;
&lt;td&gt;---&lt;/td&gt;
&lt;td&gt;184,800円&lt;/td&gt;
&lt;td&gt;148,800円&lt;/td&gt;
&lt;td&gt;174,800円&lt;/td&gt;
&lt;td&gt;184,800円&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Display&lt;/td&gt;
&lt;td&gt;11inchi&lt;/td&gt;
&lt;td&gt;12inch&lt;/td&gt;
&lt;td&gt;12inch&lt;/td&gt;
&lt;td&gt;&lt;em&gt;11inch&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;13inch&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;C2D 1.4&lt;/td&gt;
&lt;td&gt;CoreM 1.2&lt;/td&gt;
&lt;td&gt;&lt;em&gt;CoreM 1.1&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Ci5 1.6&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Ci5 1.6&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;メモリ&lt;/td&gt;
&lt;td&gt;4GB&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ストレージ&lt;/td&gt;
&lt;td&gt;128GB&lt;/td&gt;
&lt;td&gt;512GB&lt;/td&gt;
&lt;td&gt;&lt;em&gt;256GB&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;512GB&lt;/td&gt;
&lt;td&gt;512GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;サイズ&lt;/td&gt;
&lt;td&gt;30x20cm&lt;/td&gt;
&lt;td&gt;28x20cm&lt;/td&gt;
&lt;td&gt;28x20cm&lt;/td&gt;
&lt;td&gt;30x19cm&lt;/td&gt;
&lt;td&gt;32x23cm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;重量&lt;/td&gt;
&lt;td&gt;1.06&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;td&gt;0.9&lt;/td&gt;
&lt;td&gt;1.08&lt;/td&gt;
&lt;td&gt;1.35&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;NewMacBook間で比較してみた場合、
仮にCPUをCoreM1.3に上げるときのカスタマイズ費用が同額と仮定すると、実質256GBのストレージのために4万円弱払うことになる。
これをどう考えるべきかだが、現状の使い方だと今時点で128GBギリギリなので、VM増やしたりしようとすると256GBでもカツカツになる可能性は高い。&lt;/p&gt;
&lt;p&gt;NewMacBook上位と、スペックを合わせ気味にカスタマイズしたMBA各種を比較してみると、&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;いずれもCPUスペックは確実にNewMBより高みにいる&lt;/li&gt;
&lt;li&gt;MBA11だと現行と使用感はカララ図にスペックだけ上がってNewMBより1万円安い&lt;/li&gt;
&lt;li&gt;MBA13と比較すると、同額だと「全体的に大きくCPUも高性能」な代わりに「Retinaではなくファン付き」となる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また、NewMBは端子がUSBtypeC1個のみなので、旧MacBook向けに持っていたアクセサリ類が軒並み使いづらくなる（アダプタ必須）
……が、自分はあまりそういうたぐいのものを持っていないので、一旦ここは無視してOK(唯一HyperJuiceがあった)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;現時点でのまとめ&lt;/h2&gt;
&lt;p&gt;ひとまず、実物触る機会があるまでは確定させない（触ってから決める）&lt;/p&gt;
&lt;p&gt;おおまかに次の評価点で、NewMacBookにするか決める&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;キータッチ感(MBAと同等程度ならOK)&lt;/li&gt;
&lt;li&gt;軽さ(MBA13と比較してどれ位軽く感じるか)&lt;/li&gt;
&lt;li&gt;Core M 1.3Ghzのレビュー内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Mac"></category><category term="ノートPC"></category></entry><entry><title>Android SDK Licenseとjavaのファイルエンコーディング</title><link href="http://attakei.net/2014/11/22/android_sdk_license.html" rel="alternate"></link><updated>2014-11-22T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-11-22:2014/11/22/android_sdk_license.html</id><summary type="html">&lt;p&gt;限定条件下でははるものの、日本語環境がまるまるを満たしている気配がするので、ちゃんとエントリーにしてみる。&lt;/p&gt;
&lt;p&gt;元々は、&lt;a class="reference external" href="http://kivy.org/"&gt;Kivy&lt;/a&gt; の自分用テンプレートを作っていた際に、
&lt;a class="reference external" href="https://github.com/kivy/buildozer"&gt;buildozer&lt;/a&gt; を使っていた時にビルドが途中で止まってしまった事象を解消する際に見つけたもの。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;限定条件下って&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;java実行時のファイルエンコーディングを全く指定していない。もしくは指定しているがUTF-8ではない。&lt;/li&gt;
&lt;li&gt;作ったプログラムの処理過程で、Android SDKのライセンス内容を取り扱う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;発生した事象&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;何が起きた&lt;/h3&gt;
&lt;p&gt;buildozerはkivyアプリのAndroid/iOSビルドを手早く行えるようにするためのツールで、
Androidビルド時には自動的にant,SDK,NDKをダウンロードセットアップする仕組みがある。&lt;/p&gt;
&lt;p&gt;で、SDKのインストール後にビルドツールなどをダウンロードしようとするのだが、これが確実にコケる。
( &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/kivy-users/F34ZYtjgLKU"&gt;参照&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;↓こんな感じ&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;buildozer&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;中略&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;ライセンス&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;中略&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ne"&gt;UnicodeDecodeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'utf8'&lt;/span&gt; &lt;span class="n"&gt;codec&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="s1"&gt;'t decode byte 0x81 in position 760: invalid continuation byte&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;どうしてこうなった&lt;/h3&gt;
&lt;p&gt;上の通り、Android SDK License Agreementの表示途中で止まってる。そして、出てきた例外がUnicodeDecodeError。&lt;/p&gt;
&lt;p&gt;ということで、Unicode表現でない何かを表示しようとしてコケたと推測。&lt;/p&gt;
&lt;p&gt;改めて表示されていると思われる &lt;a class="reference external" href="http://dl-ssl.google.com/android/repository/addon.xml"&gt;Licenseの大元&lt;/a&gt; にたどってみると、
なんか全角アポストロフィが1個混ざってる。&lt;/p&gt;
&lt;p&gt;そして、&lt;a class="reference external" href="http://blog.lidalia.org.uk/2011/04/setting-default-java-file-encoding-to.html"&gt;この辺り&lt;/a&gt; を見ていくとわかるが、
デフォルトではjava実行時のファイルエンコーディングがUTF-8とは限らない。&lt;/p&gt;
&lt;p&gt;さらに、pythonはUnicodeでデコードしようとする。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;結論&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;buildozerが内部で &lt;strong&gt;android debug&lt;/strong&gt; を実行しようとしたが&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;javaのファイルエンコーディングを指定していなかった&lt;/strong&gt; ために、デフォルトの値が採用され&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;デフォルトエンコーディングがUTF-8ではない&lt;/strong&gt; ことから、別の文字コードで出力されてしまい&lt;/li&gt;
&lt;li&gt;buildozer自体はunicode文字列として処理しようとするが、&lt;em&gt;UTF-8でないので当然ながら処理に失敗し&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UnicodeDecodeErrorが飛ぶ&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ということらしい。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;しかたがないのでプルリク作った&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/kivy/buildozer/pull/155"&gt;https://github.com/kivy/buildozer/pull/155&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;「修正は可能な限りシンプルに」を心がけて、android update 周りのみにファイルエンコーディングをセットする対応。
一応、挙動を簡単に調べてJAVA_TOOL_OPTIONSはちゃんと継承＆上書きするように。&lt;/p&gt;
&lt;p&gt;ちなみに、修正コードを書くのに2時間強、コミットログの手直しに1時間、プルリクの文章に4時間かかった（印象）&lt;/p&gt;
&lt;p&gt;プルリクは日本語の概要を書いてからGoogle翻訳に相談しつつ書いたのだけれど、日本語の原文がこちら&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
現在のバージョンのbulldozerでは、”buildozer android build”のコマンドがパッケージ更新の段階で失敗します。
出力された例外を調べると、次のことがわかりました。
・現在のAndroid-SDKのライセンスの内容に、非ASCIIな文字が含まれていること
・java実行時に、ファイルエンコーディングがUTF-8ではないことが有ること
・エンコーディングがUTF-8ではない環境下で、ライセンスを表示しようとすると、非ASCII文字のデコードに失敗して例外が発生すること

上記の現象を解消するために、改修を行いました。
&lt;/pre&gt;
&lt;p&gt;エンジニアとして、初めてgithub上でプルリクエストを投げて、割と素早くマージしてもらえたので記念にエントリー化。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;おまけ&lt;/h2&gt;
&lt;p&gt;なお、その過程で「Android build-toolの新規インストールができない上に、更新分のインストールもできない」という結構な不備があったので、
&lt;a class="reference external" href="https://github.com/kivy/buildozer/pull/156"&gt;別途プルリク&lt;/a&gt; を出している。まだマージされていない。&lt;/p&gt;
&lt;/div&gt;
</summary><category term="プルリク振り返り"></category><category term="android"></category><category term="encoding"></category><category term="kivy"></category><category term="python"></category></entry><entry><title>Open棟梁</title><link href="http://attakei.net/2014/11/22/opendong-liang.html" rel="alternate"></link><updated>2014-11-22T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-11-22:2014/11/22/opendong-liang.html</id><summary type="html">&lt;p&gt;先週に日立グループの中から &lt;a class="reference external" href="https://github.com/OpenTouryoProject/OpenTouryo"&gt;Open棟梁&lt;/a&gt; という、.NET向けのアプリケーションフレームワークが公開されていた。
自分のブログネタにするにはだいぶ鮮度が落ちているけれど、気にしない。&lt;/p&gt;
&lt;p&gt;日立系のプロジェクトにほんの少しだけ関与していた感覚からすると、色んな意味で「よくまぁ公開できたなぁ」というのが感想。&lt;/p&gt;
&lt;p&gt;あと、好意的なプルリクエストが結構行っているので、ゆっくり進化していくといいかなぁ。コードに対するプルリクエストがどうなるかが気になる。&lt;/p&gt;
</summary><category term="OSS"></category><category term="github"></category></entry><entry><title>redmine + gitlab + jenkins = 重い</title><link href="http://attakei.net/2014/10/24/redmine-gitlab-jenkins-zhong-i.html" rel="alternate"></link><updated>2014-10-24T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-10-24:2014/10/24/redmine-gitlab-jenkins-zhong-i.html</id><summary type="html">&lt;p&gt;ほとんどタイトルで言いたいことをいい尽くした。&lt;/p&gt;
&lt;p&gt;MSDNについてくるクレジットを利用して、redmine, gitlab, jenkinsをWindowsAzureの1台のVMにのせているのだが、
クレジット上限を考慮してA1にしていると、やっぱりメモリが不足気味な模様。&lt;/p&gt;
&lt;p&gt;で、調べると最近のクラウドサーバの類でよくあるイメージでAzureのVMにもスワップが初期で割り当てられていない。&lt;/p&gt;
&lt;p&gt;普通の手段でスワップ出すのもありなのだが調べた際に便利だったページが有ったので、URLだけ貼り付けておく。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blogs.technet.com/b/ksasaki/archive/2013/06/21/linux.aspx"&gt;http://blogs.technet.com/b/ksasaki/archive/2013/06/21/linux.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;感謝感謝&lt;/p&gt;
</summary><category term="ruby"></category><category term="gitlab"></category><category term="jenkins"></category></entry><entry><title>Redmine + gitlab 連携で躓いた(その2)</title><link href="http://attakei.net/2014/10/23/redmine-gitlab-lian-xi-dezhi-itasono2.html" rel="alternate"></link><updated>2014-10-23T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-10-23:2014/10/23/redmine-gitlab-lian-xi-dezhi-itasono2.html</id><summary type="html">&lt;p&gt;前回の続き。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;redmine,gitlabを相乗りさせて、nginxをフロントに置く&lt;/li&gt;
&lt;li&gt;redmine-oauth-providerでredmineユーザで認証を出来る仕組みを準備&lt;/li&gt;
&lt;li&gt;gitlab側はomniauth-redmineをインストールして、認証先にredmineを増やす&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ここまで進めると、gitlabのログイン画面にredmine認証ボタンが出るようになり、
redmineでの利用許可後はgitlabに戻ってログインとユーザ作成が行われる……はずだった。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/static/images/2014/gitlab_422.png" /&gt;
&lt;/div&gt;
&lt;p&gt;さて、ユーザ作成が行われない。&lt;/p&gt;
&lt;p&gt;いろいろ調べた結果、影響元がだいたいこの辺にあった&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gitlabはユーザ作成後、gitリポジトリ作成などにはusernameを用いる&lt;/li&gt;
&lt;li&gt;username のフォーマットが「半角英数, '-', '_', '.'」で最後が.gitでないこと &lt;a class="reference external" href="https://github.com/gitlabhq/gitlabhq/blob/master/app/models/user.rb#L118"&gt;[gitlabソース1]&lt;/a&gt; &lt;a class="reference external" href="https://github.com/gitlabhq/gitlabhq/blob/master/lib/gitlab/regex.rb#L74"&gt;[gitlabソース2]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OmniAuth経由でユーザを作成する場合、oauthで取得したnicknameかメールアドレスのユーザ名が用いられる &lt;a class="reference external" href="https://github.com/gitlabhq/gitlabhq/blob/master/lib/gitlab/oauth/user.rb#L87"&gt;[gitlabソース3]&lt;/a&gt; &lt;a class="reference external" href="https://github.com/gitlabhq/gitlabhq/blob/master/lib/gitlab/oauth/auth_hash.rb#L31"&gt;[gitlabソース4]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;omniauth-redmineはnicknameにredmineユーザのメールアドレスを使う &lt;a class="reference external" href="https://github.com/suer/omniauth-redmine/blob/master/lib/omniauth/strategies/redmine.rb#L20"&gt;[omniauth-redmineソース]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;プラグインを修正して対応。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/attakei/omniauth-redmine"&gt;https://github.com/attakei/omniauth-redmine&lt;/a&gt; ( &lt;a class="reference external" href="https://github.com/attakei/omniauth-redmine/compare/suer:master...master"&gt;差分&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;多分プラグイン側に若干の柔軟性をもたせる形で修正すれば、やっていけるはず。
ただし、READMEの修正をまだしていないのでプルリクエストを出していない。
※というか、出すのにビビって躊躇しているだけ&lt;/p&gt;
</summary><category term="gitlab"></category><category term="redmine"></category><category term="omniauth"></category><category term="ruby"></category></entry><entry><title>Redmine + gitlab 連携で躓いた(その1)</title><link href="http://attakei.net/2014/10/20/redmine-gitlab-lian-xi-dezhi-itasono1.html" rel="alternate"></link><updated>2014-10-20T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-10-20:2014/10/20/redmine-gitlab-lian-xi-dezhi-itasono1.html</id><summary type="html">&lt;p&gt;ちょっと、ALMiniumによるredmine+gitではなく、redmineプロジェクトに同期しないリポジトリも置きたくなった。&lt;/p&gt;
&lt;p&gt;そこで一旦ALMiniumから離れて、redmine, gitlab, jenkinsなどをnginxをフロントにして個別インストールすることに。&lt;/p&gt;
&lt;p&gt;で、こんな感じ盛大に躓いて半日以上潰したのでメモっとく&lt;/p&gt;
&lt;div class="section" id="redmine-gitlab"&gt;
&lt;h2&gt;redmine, gitlabのインストール&lt;/h2&gt;
&lt;p&gt;単純にインストールしてアクセス確認するまでは、ほとんど躓かなかった。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nginx"&gt;
&lt;h2&gt;nginxをフロントに据える&lt;/h2&gt;
&lt;p&gt;最初に少々躓いたところ。&lt;/p&gt;
&lt;p&gt;redmineのインストール先を、わりと一般的な &lt;strong&gt;/var/lib/redmine&lt;/strong&gt; ではなくしたのが過ち。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;やりたかったこと&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;redmineユーザを作成して、/home/redmine/redmine にcloneして動かす&lt;/li&gt;
&lt;li&gt;unicornでredmineを動かし、nginx向けにはポートリッスンではなくsokectを使う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;起きたこと&lt;/h3&gt;
&lt;p&gt;nginxが403しか返さない。error.logにはPermission deniedと出るが、socketのパーミッションだと思い込んで、
777にしたものの変化なし。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;原因&lt;/h3&gt;
&lt;p&gt;/home/redmine 自体にnginxユーザがアクセスできてない...
nginx,redmineを同じgroupにしたうえで、/home/redmineをgroupも実行可にしてどうにか通った... &lt;a class="footnote-reference" href="#id6" id="id4"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c1"&gt;# groupadd service
# usermod -G service,nginx nginx
# usermod -G service,redmine redmine
# chmod 775 /home/redmine&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;redmine + gitlab のユーザ認証を連携させようとしたが...&lt;/h2&gt;
&lt;p&gt;gitlabを入れても認証がバラけるのが面倒だったので、ユーザ管理は基本的にredmineに任せることにした。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;どちらも、unicornで動かして、nginxがproxy_passでアクセス&lt;/li&gt;
&lt;li&gt;/redmine, /gitlabという形式でサブディレクトリ構成にする&lt;/li&gt;
&lt;li&gt;redmineに redmine-oath-provider をインストールして認証元へ&lt;/li&gt;
&lt;li&gt;gitlabに omniauth-redmine をインストールして認証先をredmineへ&lt;/li&gt;
&lt;li&gt;下がnginxのconfの一部(必要そうなところ)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;
server {
    server_name myserver;

    location ~ /redmine {
        access_log /var/log/nginx/redmine_access.log;
        proxy_pass http://redmine;
    }

    location ~ /gitlab {
        access_log /var/log/nginx/gitlab_access.log;
        proxy_pass http://gitlab;
    }

}
&lt;/pre&gt;
&lt;p&gt;この設定で、gitlabのredmine認証ページ(/gitlab/users/auth/redmine)へ進もうとしても、Not Foundとしか出ず。
gitlab側のログ類をチェックしても、ログレベルを下げても何も出てこない。&lt;/p&gt;
&lt;p&gt;しばらく他のログを見回してみると、Not Foundのログがredmine側に出ているのに気づいたのが一旦諦めて日付が変わった後。&lt;/p&gt;
&lt;p&gt;gitlab側のURLなのに &lt;strong&gt;/redmine&lt;/strong&gt; が含まれているので、redmine側で処理されてしまったらしい。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;^&lt;/strong&gt; を追加することでどうにか解消できた。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
server {
    server_name myserver;

    location ~ ^/redmine {
        access_log /var/log/nginx/redmine_access.log;
        proxy_pass http://redmine;
    }

    location ~ ^/gitlab {
        access_log /var/log/nginx/gitlab_access.log;
        proxy_pass http://gitlab;
    }

}
&lt;/pre&gt;
&lt;p&gt;これでOauth認証のフローは進むようになったのだが、別のトラブルが発生。
直した分は別記事にまとめる途中。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;gitlabのインストールをトライした時にも同じ目にあったはずなのに…&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary><category term="nginx"></category><category term="ruby"></category><category term="redmine"></category><category term="gitlab"></category></entry><entry><title>LL Diver 見学してきた</title><link href="http://attakei.net/2014/08/23/ll-diver-jian-xue-shitekita.html" rel="alternate"></link><updated>2014-08-23T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-08-23:2014/08/23/ll-diver-jian-xue-shitekita.html</id><summary type="html">&lt;p&gt;いろいろ理由はあるけど、エンジニア的刺激が欲しくて手っ取り早く直近でやっていたイベントだったので参加してきた。
午前中ドタバタしていたので、現地についたのは14時ぐらいから。&lt;/p&gt;
&lt;p&gt;この手のイベントは初参加だったりする。&lt;/p&gt;
&lt;div class="section" id="pythonweb"&gt;
&lt;h2&gt;PythonによるWebスクレイピング入門&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ちょうど社内の作業でスクレイピング寄りの何かをしようと思っていたので、うってつけかなと思って見学。&lt;/li&gt;
&lt;li&gt;標準ライブラリ以外のパターンも知ることができたのが大きな収穫。なんだかんだで、そんなにアンテナが高くないので。&lt;/li&gt;
&lt;li&gt;個人的にはコンポーネントしてるscrapyを後で触ってみようとお思う。&lt;/li&gt;
&lt;li&gt;※社内作業には、スクレイピング対象の関係でちょっと素の情報では使いにくそう&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;エディタ対決(仮)&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;atomをメイン気味で使ってはいるものの、ファーストインプレッションの時の感覚のままで使っていたので、突っ込んだ話を聞けて満足。&lt;/li&gt;
&lt;li&gt;そういえばsublimeはパッケージがpythonベースだったことを思い出したけど、なんとなくお金を払う気にならずにいるせいで若干遠目。&lt;ul&gt;
&lt;li&gt;ver2は一応無料で使えるけど、たまに出るポップアップ的なのが邪魔で使ってない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="lt"&gt;
&lt;h2&gt;LT&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;LTって初めて見る。すごい勢い（小並感）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="LL"></category></entry><entry><title>twinkerer製作中</title><link href="http://attakei.net/2014/08/14/twinkererzhi-zuo-zhong.html" rel="alternate"></link><updated>2014-08-14T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-08-14:2014/08/14/twinkererzhi-zuo-zhong.html</id><summary type="html">&lt;p&gt;なるべく週ベースでtwitterのアクティビティをまとめてこっちのエントリーにしようとしているけど、
能動的にするのがキツイので、改めて自動でまとめを作るのを意識的に実装中。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;毎週月曜夜に先週月曜〜日曜のネット上のアクティビティをまとめてみたい&lt;/li&gt;
&lt;li&gt;手始めにtwitterから&lt;/li&gt;
&lt;li&gt;Qiita, githubとかもまとめようか検討中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/attakei/twinkerer"&gt;https://github.com/attakei/twinkerer&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="blog"></category></entry><entry><title>ALMiniumのインストールで気をつけたことetc</title><link href="http://attakei.net/2014/05/15/alminiumnoinsutorudeqi-wotsuketakotoetc.html" rel="alternate"></link><updated>2014-05-15T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-05-15:2014/05/15/alminiumnoinsutorudeqi-wotsuketakotoetc.html</id><summary type="html">&lt;p&gt;ちょっと大して重要ではない細々とした理由で、今とは別の環境でALMiniumをインストールしてしてみた。
で、実際に作業した際になんとなく引っかかったりしたことをメモっていく。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前提&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;インストールは2014/05/13に実施&lt;/li&gt;
&lt;li&gt;httpsを有効化&lt;/li&gt;
&lt;li&gt;jenkinsを同時にインストール&lt;/li&gt;
&lt;li&gt;個人的な嗜好により、reStructuredText formatterを追加でインストール&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;インストールするまで&lt;/h2&gt;
&lt;p&gt;前回インストールしてみた時と変わらずに簡単にできる印象。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="https"&gt;
&lt;h2&gt;httpsを有効化してみたら……&lt;/h2&gt;
&lt;p&gt;redmine側は特に問題らしい問題は無かったのだけれど、そのままjenkinsへ移動すると、毎回リンクでの遷移が引っかかる。&lt;/p&gt;
&lt;p&gt;今回も前回同様にサーバ自体はhttpsのみを受け付けるようにしたため、jenkinsのデフォルトでhttpで遷移しようとしていた模様。
設定を切り替えていってどうにかできた。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="restructuredtext-formatter"&gt;
&lt;h2&gt;reStructuredText formatter&lt;/h2&gt;
&lt;p&gt;RbST/docutils versionに基いてインストールし用とした際に躓いた点と対応をメモ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&amp;quot;script/plugin install&amp;quot;に失敗。script/pluginが見つからない&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;A:いつからなのかはわからないけど、&amp;quot;script/rails plugin&amp;quot;に変わったっぽい？&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;上に気づいても、何故かcloneに失敗？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;で結局、次の手順でインストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# cd /path/to/redmine&lt;/span&gt;
&lt;span class="c1"&gt;# cd ./plugins&lt;/span&gt;
&lt;span class="c1"&gt;# hg clone https://bitbucket.org/ebrahim/redmine_restructuredtext_formatter&lt;/span&gt;
&lt;span class="c1"&gt;# chown -R apache:apache redmine_restructuredtext_formatter&lt;/span&gt;
&lt;span class="c1"&gt;# cd ..&lt;/span&gt;
&lt;span class="c1"&gt;# bundle install&lt;/span&gt;
&lt;span class="c1"&gt;# service httpd restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;動いているのでOKとしておく。&lt;/p&gt;
&lt;p&gt;あとは、WindowsAzure上に置いているので、これがMSDNでもらえているクレジットを越えないことを祈るのみ。&lt;/p&gt;
&lt;/div&gt;
</summary><category term="ALMinium"></category></entry><entry><title>atomを試してみる</title><link href="http://attakei.net/2014/05/08/atomwoshi-shitemiru.html" rel="alternate"></link><updated>2014-05-08T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-05-08:2014/05/08/atomwoshi-shitemiru.html</id><summary type="html">&lt;p&gt;githubが少し前に発表していたテキストエディタ &lt;a class="reference external" href="https://atom.io/"&gt;atom&lt;/a&gt; がオープンソース化されていたので、ちょっと試してみる。
実際に触りながらこの記事書いてます。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;軽くいじってみる&lt;/h2&gt;
&lt;p&gt;パッとした見た目は少し前に触ってたsublime textにだいぶ似てる。ので、仮に移行するとしてもそんなに違和感なさそう。&lt;/p&gt;
&lt;p&gt;で、調べた後にDeveloper Toolsを開いてみると本当にHTMLで書かれてるっぽい。
スタイルがコロコロ変わるためエディタ部分のブロック選択していると忙しいなこれwww&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;見た目とか&lt;/h2&gt;
&lt;p&gt;起動直後のテーマがDarkだったのでLight系に直す。
UI全体テーマとエディタ部分のテーマが分けているっぽい？&lt;/p&gt;
&lt;p&gt;他の高機能エディタと同様、フォルダを放り込むとプロジェクト扱いになるし、gitのクローンだと状態表示はされそう。
ただ、subversionのワークコピーをまるごと放り込んで見たら.svnがそのままだったところを見ると、多分git限定？テーマかパッケージで対応できるのかな？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;パッケージを追加してみる&lt;/h2&gt;
&lt;p&gt;当たり前かもしれないけど、初期状態だとreStructuredTextのパッケージが入っていなかったので入れる。&lt;/p&gt;
&lt;p&gt;ちなみにこの記事を編集している隣で試した見たのだけれど、
&lt;strong&gt;探す→入れる&lt;/strong&gt; がダウンロード込みで1分程度。編集に戻ってみると既に反映されていて素敵&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;仮結論&lt;/h2&gt;
&lt;p&gt;しばらく使ってみよう&lt;/p&gt;
&lt;/div&gt;
</summary><category term="atom"></category><category term="github"></category></entry><entry><title>kivy-chips: 自分の中でのボタンのイメージ通りのUIX</title><link href="http://attakei.net/2014/04/18/kivy-chips-zi-fen-nozhong-denobotannoimezitong-rinouix.html" rel="alternate"></link><updated>2014-04-18T00:00:00+09:00</updated><author><name>attakei</name></author><id>tag:attakei.net,2014-04-18:2014/04/18/kivy-chips-zi-fen-nozhong-denobotannoimezitong-rinouix.html</id><summary type="html">&lt;p&gt;Kivyを少しだけいじってしばらく経つけど、なんかButtonオブジェクト &lt;a class="footnote-reference" href="#f1" id="id1"&gt;[1]&lt;/a&gt;  のreleaseイベントが、
ボタンを押してから放した場所がボタンの上でなくてもディスパッチされている模様。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/kivy/kivy/blob/master/kivy/uix/behaviors.py#L108"&gt;https://github.com/kivy/kivy/blob/master/kivy/uix/behaviors.py#L108&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
def on_touch_up(self, touch):
    if touch.grab_current is not self:
        return super(ButtonBehavior, self).on_touch_up(touch)
    assert(self in touch.ud)
    touch.ungrab(self)
    self.last_touch = touch
    self._do_release()
    self.dispatch('on_release')
    return True
&lt;/pre&gt;
&lt;p&gt;ここで、touch(最後にポインタが持っていた座標)を特に検証していないのが理由っぽいので、
ちゃんとボタンの範囲内で放したかを判定してdispatchに行くような挙動に変えてみた。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/attakei/kivy-chips/blob/master/strict_uix/strict/behaviors.py"&gt;https://github.com/attakei/kivy-chips/blob/master/strict_uix/strict/behaviors.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;こんな感じ。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
from kivy.uix.behaviors import ButtonBehavior

def is_released_on(released_pos, widget):
    touched_area_x = (widget.pos[0], widget.pos[0] + widget.size[0])
    touched_area_y = (widget.pos[1], widget.pos[1] + widget.size[1])
    if touched_area_x[0] &amp;lt; released_pos[0] &amp;lt; touched_area_x[1] and \
            touched_area_y[0] &amp;lt; released_pos[1] &amp;lt; touched_area_y[1]:
        return True
    return False

class StrictButtonBehavior(ButtonBehavior):
    def on_touch_up(self, touch):
        if touch.grab_current is not self:
            return super(ButtonBehavior, self).on_touch_up(touch)
        assert(self in touch.ud)
        touch.ungrab(self)
        self.last_touch = touch
        self._do_release()
        if is_released_on(touch.pos, self):
            self.dispatch('on_release')
        return True
&lt;/pre&gt;
&lt;p&gt;以下、サンプルのキャプチャ&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/sstatic/images/2014/kivy_chips_strict_uix.png" style="width: 320px;" /&gt;
&lt;/div&gt;
&lt;p class="rubric"&gt;※補足&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="f1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;正確には、大本の振る舞いを定義したButtonBehavior&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="Python"></category><category term="KIvy"></category></entry></feed>